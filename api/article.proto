syntax = "proto3";
// 文件名使用小写下划线的命名风格，例如 lower_snake_case.proto
// 包名应该和目录结构对应，例如文件在my/package/目录下，包名应为 my.package
option go_package = "api/article";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

// RPC 服务名和方法名，均使用首字母大写驼峰风格，例如service FooService{ rpc GetSomething() }
// blog service is a blog demo
service BlogService {
    // 获取文章列表
    // 可以读取不多于999个文章列表
    rpc GetArticles(GetArticlesReq) returns (GetArticlesReply) { option (google.api.http) = { post: "/v1/articles" additional_bindings { post: "/v1/author/articles" } }; }
    // 新建文章
    rpc CreateArticle(Article) returns (Article) { option (google.api.http) = { post: "/v1/author/{author_id}/articles"}; }
    // 获取文章详情(TODO get方法还未支持)
    rpc GetOneArticle(GetArticlesReq) returns (GetArticlesReply) { option (google.api.http) = { get: "/v1/get/article"}; }

    rpc GetOneArticle2(GetArticlesReq) returns (GetArticlesReplyPure) { // output=origin
        option (google.api.http) = { get: "/v1/get/article"};
    }

}

// 消息名使用首字母大写驼峰风格(CamelCase)，例如message StudentReq { ... }
message GetArticlesReq {
    // 文章标题
    string title = 1; // 标题名称右注释 binding:"required"
    int32 page = 2; // binding:"lt=999"
    // 字段名使用小写下划线的风格，例如 string status_code = 1
    int32 page_size = 3; // binding:"lte=101"
    // 作者id
    int32 author_id = 4;
    string email = 5;// binding:"email"
    string name = 6;
    Location home = 7; // binding:"required"
    message Location {
        double lat = 1; // binding:"lte:90,gte:-90"
        double lng = 2; // binding:"gte:-180,lte:180"
    }
    string test_str = 8; //  binding:"required"
}

// 重要注释1
message GetArticlesReply {
    int64 total = 1;  // binding:"required"
    repeated Article articles = 2; // omitempty=false
}

message GetArticlesReplyPure { // origin=true
    int64 Code = 1;
    string Message = 2;
    repeated Article Data = 3;
}

message Article {
    // 标题名称上注释
    string title  = 1; // 标题名称右注释
    string content = 2;  // binding:"required"
    int32 author_id = 3;
}

// 枚举类型，枚举名使用首字母大写驼峰风格，例如 enum FooBar，枚举值使用全大写下划线隔开的风格(CAPITALS_WITH_UNDERSCORES )，例如 FOO_DEFAULT=1